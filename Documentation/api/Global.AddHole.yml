### YamlMime:ManagedReference
items:
- uid: Global.AddHole
  commentId: T:Global.AddHole
  id: AddHole
  parent: Global
  children:
  - Global.AddHole.getColorArray(System.Int32,UnityEngine.Color)
  - Global.AddHole.material
  langs:
  - csharp
  - vb
  name: AddHole
  nameWithType: AddHole
  fullName: AddHole
  type: Class
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/AddHole.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: AddHole
    path: ../Assets/Code/Scripts/Managers/Functions/AddHole.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nDodawanie otwórów do ścian 2D oraz 3D\n"
  example: []
  syntax:
    content: 'public class AddHole : MonoBehaviour'
    content.vb: >-
      Public Class AddHole
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.AddHole.material
  commentId: F:Global.AddHole.material
  id: material
  parent: Global.AddHole
  langs:
  - csharp
  - vb
  name: material
  nameWithType: AddHole.material
  fullName: AddHole.material
  type: Field
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/AddHole.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: material
    path: ../Assets/Code/Scripts/Managers/Functions/AddHole.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nPrzypisanie materiału dla obiektu z otworem (np. okiennym)\n"
  example: []
  syntax:
    content: public Material material
    return:
      type: UnityEngine.Material
    content.vb: Public material As Material
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.AddHole.getColorArray(System.Int32,UnityEngine.Color)
  commentId: M:Global.AddHole.getColorArray(System.Int32,UnityEngine.Color)
  id: getColorArray(System.Int32,UnityEngine.Color)
  parent: Global.AddHole
  langs:
  - csharp
  - vb
  name: getColorArray(Int32, Color)
  nameWithType: AddHole.getColorArray(Int32, Color)
  fullName: AddHole.getColorArray(System.Int32, UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/AddHole.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: getColorArray
    path: ../Assets/Code/Scripts/Managers/Functions/AddHole.cs
    startLine: 243
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Color3f[] getColorArray(int length, Color c)
    parameters:
    - id: length
      type: System.Int32
    - id: c
      type: UnityEngine.Color
    return:
      type: Net3dBool.Color3f[]
    content.vb: Public Function getColorArray(length As Integer, c As Color) As Color3f()
  overload: Global.AddHole.getColorArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: Global.AddHole.getColorArray*
  commentId: Overload:Global.AddHole.getColorArray
  name: getColorArray
  nameWithType: AddHole.getColorArray
  fullName: AddHole.getColorArray
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Net3dBool.Color3f[]
  isExternal: true
  name: Color3f[]
  nameWithType: Color3f[]
  fullName: Net3dBool.Color3f[]
  nameWithType.vb: Color3f()
  fullName.vb: Net3dBool.Color3f()
  name.vb: Color3f()
  spec.csharp:
  - uid: Net3dBool.Color3f
    name: Color3f
    nameWithType: Color3f
    fullName: Net3dBool.Color3f
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Net3dBool.Color3f
    name: Color3f
    nameWithType: Color3f
    fullName: Net3dBool.Color3f
  - name: ()
    nameWithType: ()
    fullName: ()
