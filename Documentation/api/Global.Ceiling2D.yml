### YamlMime:ManagedReference
items:
- uid: Global.Ceiling2D
  commentId: T:Global.Ceiling2D
  id: Ceiling2D
  parent: Global
  children:
  - Global.Ceiling2D.#ctor(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.GameObject)
  - Global.Ceiling2D.Ceiling2DInstance
  - Global.Ceiling2D.Corners
  langs:
  - csharp
  - vb
  name: Ceiling2D
  nameWithType: Ceiling2D
  fullName: Ceiling2D
  type: Class
  source:
    remote:
      path: Assets/Managers/Ceiling/CeilingDoma.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: Ceiling2D
    path: ../Assets/Managers/Ceiling/CeilingDoma.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class Ceiling2D
    content.vb: Public Class Ceiling2D
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Ceiling2D.Corners
  commentId: P:Global.Ceiling2D.Corners
  id: Corners
  parent: Global.Ceiling2D
  langs:
  - csharp
  - vb
  name: Corners
  nameWithType: Ceiling2D.Corners
  fullName: Ceiling2D.Corners
  type: Property
  source:
    remote:
      path: Assets/Managers/Ceiling/CeilingDoma.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: Corners
    path: ../Assets/Managers/Ceiling/CeilingDoma.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<Vector3> Corners { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public Property Corners As List(Of Vector3)
  overload: Global.Ceiling2D.Corners*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.Ceiling2D.Ceiling2DInstance
  commentId: P:Global.Ceiling2D.Ceiling2DInstance
  id: Ceiling2DInstance
  parent: Global.Ceiling2D
  langs:
  - csharp
  - vb
  name: Ceiling2DInstance
  nameWithType: Ceiling2D.Ceiling2DInstance
  fullName: Ceiling2D.Ceiling2DInstance
  type: Property
  source:
    remote:
      path: Assets/Managers/Ceiling/CeilingDoma.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: Ceiling2DInstance
    path: ../Assets/Managers/Ceiling/CeilingDoma.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject Ceiling2DInstance { get; set; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public Property Ceiling2DInstance As GameObject
  overload: Global.Ceiling2D.Ceiling2DInstance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.Ceiling2D.#ctor(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.GameObject)
  commentId: M:Global.Ceiling2D.#ctor(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.GameObject)
  id: '#ctor(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.GameObject)'
  parent: Global.Ceiling2D
  langs:
  - csharp
  - vb
  name: Ceiling2D(List<Vector3>, GameObject)
  nameWithType: Ceiling2D.Ceiling2D(List<Vector3>, GameObject)
  fullName: Ceiling2D.Ceiling2D(System.Collections.Generic.List<UnityEngine.Vector3>, UnityEngine.GameObject)
  type: Constructor
  source:
    remote:
      path: Assets/Managers/Ceiling/CeilingDoma.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: .ctor
    path: ../Assets/Managers/Ceiling/CeilingDoma.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Ceiling2D(List<Vector3> corners, GameObject ceiling2DInstance)
    parameters:
    - id: corners
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    - id: ceiling2DInstance
      type: UnityEngine.GameObject
    content.vb: Public Sub New(corners As List(Of Vector3), ceiling2DInstance As GameObject)
  overload: Global.Ceiling2D.#ctor*
  nameWithType.vb: Ceiling2D.Ceiling2D(List(Of Vector3), GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ceiling2D.Ceiling2D(System.Collections.Generic.List(Of UnityEngine.Vector3), UnityEngine.GameObject)
  name.vb: Ceiling2D(List(Of Vector3), GameObject)
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Ceiling2D.Corners*
  commentId: Overload:Global.Ceiling2D.Corners
  name: Corners
  nameWithType: Ceiling2D.Corners
  fullName: Ceiling2D.Corners
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Ceiling2D.Ceiling2DInstance*
  commentId: Overload:Global.Ceiling2D.Ceiling2DInstance
  name: Ceiling2DInstance
  nameWithType: Ceiling2D.Ceiling2DInstance
  fullName: Ceiling2D.Ceiling2DInstance
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.Ceiling2D.#ctor*
  commentId: Overload:Global.Ceiling2D.#ctor
  name: Ceiling2D
  nameWithType: Ceiling2D.Ceiling2D
  fullName: Ceiling2D.Ceiling2D
