### YamlMime:ManagedReference
items:
- uid: Global.DrawWall
  commentId: T:Global.DrawWall
  id: DrawWall
  parent: Global
  children:
  - Global.DrawWall.currentStatusDoma
  - Global.DrawWall.DrawMesh2D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.String)
  - Global.DrawWall.DrawMesh3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.String)
  - Global.DrawWall.getColorArray(System.Int32,UnityEngine.Color)
  langs:
  - csharp
  - vb
  name: DrawWall
  nameWithType: DrawWall
  fullName: DrawWall
  type: Class
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/DrawWall.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: DrawWall
    path: ../Assets/Code/Scripts/Managers/Functions/DrawWall.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class DrawWall : MonoBehaviour'
    content.vb: >-
      Public Class DrawWall
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.DrawWall.currentStatusDoma
  commentId: F:Global.DrawWall.currentStatusDoma
  id: currentStatusDoma
  parent: Global.DrawWall
  langs:
  - csharp
  - vb
  name: currentStatusDoma
  nameWithType: DrawWall.currentStatusDoma
  fullName: DrawWall.currentStatusDoma
  type: Field
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/DrawWall.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: currentStatusDoma
    path: ../Assets/Code/Scripts/Managers/Functions/DrawWall.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Current Status Doma")]

      public CurrentStatusDoma currentStatusDoma
    return:
      type: Global.CurrentStatusDoma
    content.vb: >-
      <Header("Current Status Doma")>

      Public currentStatusDoma As CurrentStatusDoma
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Current Status Doma
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.DrawWall.DrawMesh2D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.String)
  commentId: M:Global.DrawWall.DrawMesh2D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.String)
  id: DrawMesh2D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.String)
  parent: Global.DrawWall
  langs:
  - csharp
  - vb
  name: DrawMesh2D(Vector3, Vector3, Single, String)
  nameWithType: DrawWall.DrawMesh2D(Vector3, Vector3, Single, String)
  fullName: DrawWall.DrawMesh2D(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, System.String)
  type: Method
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/DrawWall.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: DrawMesh2D
    path: ../Assets/Code/Scripts/Managers/Functions/DrawWall.cs
    startLine: 198
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject DrawMesh2D(Vector3 startPoint, Vector3 endPoint, float width, string name)
    parameters:
    - id: startPoint
      type: UnityEngine.Vector3
    - id: endPoint
      type: UnityEngine.Vector3
    - id: width
      type: System.Single
    - id: name
      type: System.String
    return:
      type: UnityEngine.GameObject
    content.vb: Public Function DrawMesh2D(startPoint As Vector3, endPoint As Vector3, width As Single, name As String) As GameObject
  overload: Global.DrawWall.DrawMesh2D*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.DrawWall.DrawMesh3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.String)
  commentId: M:Global.DrawWall.DrawMesh3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.String)
  id: DrawMesh3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.String)
  parent: Global.DrawWall
  langs:
  - csharp
  - vb
  name: DrawMesh3D(Vector3, Vector3, Single, Single, String)
  nameWithType: DrawWall.DrawMesh3D(Vector3, Vector3, Single, Single, String)
  fullName: DrawWall.DrawMesh3D(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, System.Single, System.String)
  type: Method
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/DrawWall.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: DrawMesh3D
    path: ../Assets/Code/Scripts/Managers/Functions/DrawWall.cs
    startLine: 258
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Tuple<GameObject, Solid> DrawMesh3D(Vector3 startPoint, Vector3 endPoint, float width, float height, string name)
    parameters:
    - id: startPoint
      type: UnityEngine.Vector3
    - id: endPoint
      type: UnityEngine.Vector3
    - id: width
      type: System.Single
    - id: height
      type: System.Single
    - id: name
      type: System.String
    return:
      type: System.Tuple{UnityEngine.GameObject,Net3dBool.Solid}
    content.vb: Public Function DrawMesh3D(startPoint As Vector3, endPoint As Vector3, width As Single, height As Single, name As String) As Tuple(Of GameObject, Solid)
  overload: Global.DrawWall.DrawMesh3D*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.DrawWall.getColorArray(System.Int32,UnityEngine.Color)
  commentId: M:Global.DrawWall.getColorArray(System.Int32,UnityEngine.Color)
  id: getColorArray(System.Int32,UnityEngine.Color)
  parent: Global.DrawWall
  langs:
  - csharp
  - vb
  name: getColorArray(Int32, Color)
  nameWithType: DrawWall.getColorArray(Int32, Color)
  fullName: DrawWall.getColorArray(System.Int32, UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Assets/Code/Scripts/Managers/Functions/DrawWall.cs
      branch: master
      repo: https://github.com/DomaPro/doma_app.git
    id: getColorArray
    path: ../Assets/Code/Scripts/Managers/Functions/DrawWall.cs
    startLine: 371
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Color3f[] getColorArray(int length, Color c)
    parameters:
    - id: length
      type: System.Int32
    - id: c
      type: UnityEngine.Color
    return:
      type: Net3dBool.Color3f[]
    content.vb: Public Function getColorArray(length As Integer, c As Color) As Color3f()
  overload: Global.DrawWall.getColorArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.CurrentStatusDoma
  commentId: T:Global.CurrentStatusDoma
  name: CurrentStatusDoma
  nameWithType: CurrentStatusDoma
  fullName: CurrentStatusDoma
- uid: Global.DrawWall.DrawMesh2D*
  commentId: Overload:Global.DrawWall.DrawMesh2D
  name: DrawMesh2D
  nameWithType: DrawWall.DrawMesh2D
  fullName: DrawWall.DrawMesh2D
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.DrawWall.DrawMesh3D*
  commentId: Overload:Global.DrawWall.DrawMesh3D
  name: DrawMesh3D
  nameWithType: DrawWall.DrawMesh3D
  fullName: DrawWall.DrawMesh3D
- uid: System.Tuple{UnityEngine.GameObject,Net3dBool.Solid}
  commentId: T:System.Tuple{UnityEngine.GameObject,Net3dBool.Solid}
  parent: System
  definition: System.Tuple`2
  name: Tuple<GameObject, Solid>
  nameWithType: Tuple<GameObject, Solid>
  fullName: System.Tuple<UnityEngine.GameObject, Net3dBool.Solid>
  nameWithType.vb: Tuple(Of GameObject, Solid)
  fullName.vb: System.Tuple(Of UnityEngine.GameObject, Net3dBool.Solid)
  name.vb: Tuple(Of GameObject, Solid)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Net3dBool.Solid
    name: Solid
    nameWithType: Solid
    fullName: Net3dBool.Solid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Net3dBool.Solid
    name: Solid
    nameWithType: Solid
    fullName: Net3dBool.Solid
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.DrawWall.getColorArray*
  commentId: Overload:Global.DrawWall.getColorArray
  name: getColorArray
  nameWithType: DrawWall.getColorArray
  fullName: DrawWall.getColorArray
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Net3dBool.Color3f[]
  isExternal: true
  name: Color3f[]
  nameWithType: Color3f[]
  fullName: Net3dBool.Color3f[]
  nameWithType.vb: Color3f()
  fullName.vb: Net3dBool.Color3f()
  name.vb: Color3f()
  spec.csharp:
  - uid: Net3dBool.Color3f
    name: Color3f
    nameWithType: Color3f
    fullName: Net3dBool.Color3f
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Net3dBool.Color3f
    name: Color3f
    nameWithType: Color3f
    fullName: Net3dBool.Color3f
  - name: ()
    nameWithType: ()
    fullName: ()
